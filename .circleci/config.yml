
version: 2.1

restore-cache: &restore_cache
  restore_cache:
    keys:
      - npm-packages-{{ checksum "package-lock.json" }}

save-cache: &save_cache
  save_cache:
    key: npm-packages-{{ checksum "package-lock.json" }}
    paths:
      - ~/.cache/npm

fast-checkout: &fast-checkout
  attach_workspace:
    at: /home/circleci

filter-feature-branch: &filter-feature-branch
  branches:
    ignore: 
      - main

filter-main-branch: &filter-main-branch
  branches:
    only: /main/
    ignore:
      - /.*/

executors:
  node:
    docker:
      - image: circleci/node

jobs:
  checkout:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - run:
          name: "Install dependencies"
          command: npm ci
      - <<: *save_cache
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            - project/node_modules
  run-tests:
    executor: node
    steps:
      - <<: *fast-checkout
      - run:
          name: "Run tests"
          command: npm run test
  build:
    executor: node
    steps:
      - <<: *fast-checkout
      - run:
          name: "Build monorepo packages"
          command: npm run build
      - persist_to_workspace:
          root: ~/project
          paths: .
  publish:
    executor: node
    steps:
      - attach_workspace:
          at: ~/project
      - add_ssh_keys:
            fingerprints:
              - "9b:e7:8c:70:8f:e0:ca:b1:c6:89:70:c4:dc:66:05:30"
      - run:
          name: "Configure Github"
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git config user.email "circleci@core-context.com"
            git config user.name "circleci"
      - run:
          name: "Configure NPM"
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > /home/circleci/.npmrc
      - run:
          name: "Version NPM packages"
          command: "npx lerna version --yes --message 'chore: tag package versions [skip ci]'"
      - run:
          name: "Publish NPM packages"
          command: npx lerna publish from-git --yes

workflows:
  feature-branch-pipeline:
    jobs:
      - checkout:
          filters: 
            <<: *filter-feature-branch
      - build:
          name: build
          requires:
            - checkout
      - run-tests:
          name: run-tests
          requires:
            - build
  main-branch-pipeline:
    jobs:
      - checkout:
          filters: 
            <<: *filter-main-branch
      - build:
          name: build
          requires:
            - checkout
      - run-tests:
          name: run-tests
          requires:
            - build
      - publish:
          name: publish
          requires:
            - run-tests